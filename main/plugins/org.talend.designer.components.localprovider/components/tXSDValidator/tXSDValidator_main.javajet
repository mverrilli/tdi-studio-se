<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.IConnection
	org.talend.core.model.process.IConnectionCategory
	org.talend.core.model.metadata.IMetadataTable 
	org.talend.core.model.metadata.IMetadataColumn
	java.util.List
    java.util.Map
    java.util.HashMap
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode)codeGenArgument.getArgument();
String cid = node.getUniqueName();

String xsdfile = ElementParameterParser.getValue(node, "__XSDFILE__");
Boolean print = new Boolean(ElementParameterParser.getValue(node, "__PRINT__"));
String validMessage = ElementParameterParser.getValue(node, "__VALID_MESSAGE__");
String invalidMessage = ElementParameterParser.getValue(node, "__INVALID_MESSAGE__");
String xmlfile = ElementParameterParser.getValue(node, "__XMLFILE__");
String mode = ElementParameterParser.getValue(node, "__MODE__");
String encoding = ElementParameterParser.getValue(node, "__ENCODING__");

List<Map<String, String>> features = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node,"__ENABLE_FEATURES__");
%>

javax.xml.validation.SchemaFactory factory<%=cid %> =javax.xml.validation.SchemaFactory.newInstance("http://www.w3.org/2001/XMLSchema");

<%
if(features!=null && features.size()>0){
    for(int i = 0; i < features.size(); i++){
    	Map<String, String> feature = features.get(i);
    	%>
    	factory<%=cid %>.setFeature(<%=feature.get("FEATURE")%>, true);
    <%
    }
}
%>

String xsdfile_<%=cid%> = <%=xsdfile %>;
boolean isURL_<%=cid%> = xsdfile_<%=cid%>!=null && xsdfile_<%=cid%>.startsWith("http") && xsdfile_<%=cid%>.endsWith("xsd");
Object schemaLocation<%=cid %> = null;
if(isURL_<%=cid%>) {
	schemaLocation<%=cid %> = new java.net.URL(xsdfile_<%=cid%>);	
} else {
	schemaLocation<%=cid %> = new java.io.File(xsdfile_<%=cid%>);
}
String message_<%=cid %> =null;
String errorMessage_<%=cid%>=null;
int validate_<%=cid %> = 0;


	class TalendErrorHandler_<%=cid %> implements org.xml.sax.ErrorHandler{
	  	String errorMessage=null;

		public void warning(org.xml.sax.SAXParseException ex) throws org.xml.sax.SAXException{
			if (errorMessage== null){
				errorMessage = "There is a Warning on line " + String.valueOf(ex.getLineNumber()) + " : " + ex.getMessage();
			}else{
				errorMessage = errorMessage + "\n" + "There is a Warning on line " + String.valueOf(ex.getLineNumber()) + " : " + ex.getMessage();
			}
		}

		public void error(org.xml.sax.SAXParseException ex) throws org.xml.sax.SAXException{
			if (errorMessage== null){
				errorMessage = "There is an Error on line " + String.valueOf(ex.getLineNumber()) + " : " + ex.getMessage();
			}else{
				errorMessage = errorMessage + "\n" + "There is an Error on line " + String.valueOf(ex.getLineNumber()) + " : " + ex.getMessage();
			}
				//throw ex;
		}
		
		public void error(java.io.IOException ioEx){
			if (errorMessage == null) {
				errorMessage = "There is an Error on line " + " : " + ioEx.getMessage();
			} else {
				errorMessage = errorMessage + "\n" + "There is an Error on line " + " : " + ioEx.getMessage();
			}
		}
		
		public void fatalError(org.xml.sax.SAXParseException ex) throws org.xml.sax.SAXException{
			if (errorMessage == null){
				errorMessage = "There is a Fatal Error on line " + String.valueOf(ex.getLineNumber()) + " : " + ex.getMessage();
			}else{
				errorMessage =errorMessage + "\n" + "There is a Fatal Error on line " + String.valueOf(ex.getLineNumber()) + " : " + ex.getMessage();
			}
			throw ex;
		}
		
		private String returnMessage(){
			return errorMessage==null?"":errorMessage;
		}

	}
TalendErrorHandler_<%=cid %> errorHandler_<%=cid %>=new TalendErrorHandler_<%=cid %>();
java.io.InputStream xmlfile<%=cid %> = null;
	
<%
if("FLOW_MODE".equals(mode)){
	List<Map<String, String>> manualtable = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__MANUALTABLE__");
	Map<String,String> allocateMap = new HashMap<String,String>();
	for (Map<String, String> manualColumn : manualtable){
		allocateMap.put(manualColumn.get("INPUT_COLUMN"),manualColumn.get("XSD_FILE"));
	}
	List<IMetadataTable> metadatas = node.getMetadataList();
	if ((metadatas!=null)&&(metadatas.size()>0)) {
	    IMetadataTable metadata = metadatas.get(0);
	    if (metadata!=null) {
			List<IMetadataColumn> columns = metadata.getListColumns();
	    	String inConnName = "", outConnName = null, rejectConnName = null;
	    	List<? extends IConnection> inConns = node.getIncomingConnections();
	    	List<? extends IConnection> outConns = node.getOutgoingSortedConnections();
	    	List<? extends IConnection> rejectConns = node.getOutgoingConnections("REJECT");
			if (rejectConns != null && rejectConns.size() > 0) {
				for (IConnection rejectConn : rejectConns) {
					if (rejectConn.isActivate()){
						rejectConnName = rejectConn.getName();
					}
				}
			}
			if(inConns != null && inConns.size() > 0){
				inConnName = inConns.get(0).getName();
			}
			
				for(IConnection outgoingConn : outConns) {
					if(rejectConnName == null || (rejectConnName != null && !outgoingConn.getName().equals(rejectConnName))) {
						if(outgoingConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
							outConnName = outgoingConn.getName();
							break;
						}
					}
				}
				if(outConnName != null) {
%>
					<%=outConnName%> = new <%=outConnName%>Struct();
<%
				}
				if(rejectConnName != null){
%>
					<%=rejectConnName %> = new <%=rejectConnName %>Struct();
<%
				}
%>
				String errorMessageRow_<%=cid%> = "";
<%
				for(IMetadataColumn column : columns){
					String outLabel = column.getLabel();
		    		if(allocateMap.containsKey(outLabel)){
%>
						try {
							javax.xml.validation.Schema schema<%=cid %> = null;
							String location<%=cid%> = <%=allocateMap.get(outLabel)%>;
							isURL_<%=cid%> = location<%=cid%>!=null && location<%=cid%>.startsWith("http") && location<%=cid%>.endsWith("xsd");
							if(isURL_<%=cid%>) {
								schema<%=cid %> = factory<%=cid %>.newSchema(new java.net.URL(location<%=cid%>));
							} else {
								schema<%=cid %> = factory<%=cid %>.newSchema(new java.io.File(location<%=cid%>));
							}
							xmlfile<%=cid %> = new ByteArrayInputStream(((String)<%=inConnName%>.<%=outLabel%>).getBytes(<%=encoding%>));
							javax.xml.validation.Validator validator<%=cid %> = schema<%=cid %>.newValidator();
							javax.xml.transform.Source source<%=cid %> = new javax.xml.transform.stream.StreamSource(xmlfile<%=cid %>);
							validator<%=cid %>.setErrorHandler(errorHandler_<%=cid %>);
						    validator<%=cid %>.validate(source<%=cid %>);
						} catch (org.xml.sax.SAXParseException ex<%=cid %>) {
                            globalMap.put("<%=cid%>_ERROR_MESSAGE",ex<%=cid%>.getMessage());
							errorHandler_<%=cid %>.error(ex<%=cid %>);
						} catch (java.io.IOException ioEx<%=cid %>){
						    globalMap.put("<%=cid%>_ERROR_MESSAGE",ioEx<%=cid %>.getMessage());
							errorHandler_<%=cid %>.error(ioEx<%=cid %>);
						}finally{
							if(xmlfile<%=cid %> != null){
								xmlfile<%=cid %>.close();
							}
						}
						errorMessage_<%=cid %> = errorHandler_<%=cid %>.returnMessage();
						<%
						if(outConnName != null) {
						%>
							<%=outConnName%>.<%=column.getLabel()%> = <%=inConnName%>.<%=column.getLabel()%>;
						<%
						}
						if(rejectConnName != null){
						%>
							<%=rejectConnName%>.<%=column.getLabel()%> = <%=inConnName%>.<%=column.getLabel()%>;
						<%
						}
						%>
						if (errorMessage_<%=cid%>==null || errorMessage_<%=cid%>.length()<1) {
							
							validate_<%=cid %> = 1;
							
						} else {
						    errorMessageRow_<%=cid%> = errorMessageRow_<%=cid%> + "<%=column.getLabel()%>: "+errorMessage_<%=cid%>+'\n';
<%
							if(rejectConnName != null){
%>
								<%=rejectConnName%>.errorMessage = "<%=column.getLabel()%>: "+errorMessage_<%=cid%>;
<%
							}else{
%>
								System.err.println("<%=column.getLabel()%>: "+errorMessage_<%=cid%>);
<%
							}
%>
						}
<%
		    		}else{
						if(outConnName != null) {
%>
							<%=outConnName%>.<%=column.getLabel()%> = <%=inConnName%>.<%=column.getLabel()%>;
						<%
						}
						if(rejectConnName!=null){
						%>
						    <%=rejectConnName%>.<%=column.getLabel()%> = <%=inConnName%>.<%=column.getLabel()%>;
						<%
						}
						%>
						if (errorMessage_<%=cid%>==null || errorMessage_<%=cid%>.length()<1) {
							validate_<%=cid %> = 1;
						}
<%
					}
				}
%>
			errorMessage_<%=cid %> = errorHandler_<%=cid %>.returnMessage();
			<%
			if(rejectConnName != null){
			%>
				if (errorMessage_<%=cid%>==null || errorMessage_<%=cid%>.length()<1) {
					<%=rejectConnName%> = null;
				} 
			<%
			}
			if(outConnName != null){ 
			%>
				if (errorMessage_<%=cid%>!=null && !errorMessage_<%=cid%>.isEmpty()) {
					<%=outConnName%> = null;
				}
			<%
			} 
			
			%>
			
            globalMap.put("<%=cid %>_DIFFERENCE", "" + validate_<%=cid %>);
            globalMap.put("<%=cid %>_VALID", (validate_<%=cid %> == 1)?true:false);
	    	globalMap.put("<%=cid %>_XSD_ERROR_MESSAGE", errorMessageRow_<%=cid%>);
<%
	    }
	}
}else{
%>
Object oXmlFile<%=cid %> = null;
try {
	javax.xml.validation.Schema schema<%=cid %> = null;
	if(isURL_<%=cid%>) {
		schema<%=cid %> = factory<%=cid %>.newSchema((java.net.URL)schemaLocation<%=cid %>);
	} else {
		schema<%=cid %> = factory<%=cid %>.newSchema((java.io.File)schemaLocation<%=cid %>);
	}
	javax.xml.validation.Validator validator<%=cid %> = schema<%=cid %>.newValidator();
	javax.xml.transform.Source source<%=cid %> = null;
	oXmlFile<%=cid %> = <%=xmlfile %>;
	if(oXmlFile<%=cid %> instanceof String){
		xmlfile<%=cid %> = new java.io.FileInputStream((String)oXmlFile<%=cid %>);
		source<%=cid %> = new javax.xml.transform.stream.StreamSource(xmlfile<%=cid%>);
	} else if(oXmlFile<%=cid %> instanceof java.io.InputStream){
		source<%=cid %> = new javax.xml.transform.stream.StreamSource((java.io.InputStream)oXmlFile<%=cid %>);
	}
	validator<%=cid %>.setErrorHandler(errorHandler_<%=cid %>);
    validator<%=cid %>.validate(source<%=cid %>);
} catch (org.xml.sax.SAXParseException ex<%=cid %>) {
globalMap.put("<%=cid%>_ERROR_MESSAGE",ex<%=cid%>.getMessage());
	errorHandler_<%=cid %>.error(ex<%=cid %>);
} catch (java.io.IOException ioEx<%=cid %>){
globalMap.put("<%=cid%>_ERROR_MESSAGE",ioEx<%=cid %>.getMessage());
	errorHandler_<%=cid %>.error(ioEx<%=cid %>);
}finally{
	if(xmlfile<%=cid %> != null){
		xmlfile<%=cid %>.close();
	}
}
errorMessage_<%=cid %>=errorHandler_<%=cid %>.returnMessage();
if (errorMessage_<%=cid%>!=null&& errorMessage_<%=cid%>.length()>0) {
	message_<%=cid %> = <%=invalidMessage %>;
} else {
	message_<%=cid %> = <%=validMessage %>;
	validate_<%=cid %> = 1;
	errorMessage_<%=cid%>=null;
}

globalMap.put("<%=cid %>_DIFFERENCE", "" + validate_<%=cid %>);
globalMap.put("<%=cid %>_VALID", (validate_<%=cid %> == 1)?true:false);
globalMap.put("<%=cid %>_ERROR_MESSAGE", "" + message_<%=cid %>);
globalMap.put("<%=cid %>_XSD_ERROR_MESSAGE", "" + errorMessage_<%=cid%>);

<%
if (print) {
%>
    System.out.println(message_<%=cid %>);
    if(validate_<%=cid %>==0)
    {
    System.err.println(errorMessage_<%=cid%>);
    }
<%
}

for (IConnection conn : node.getOutgoingConnections()) {
	if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
%>
		<%=conn.getName() %>.xsdfile = <%=xsdfile %>;
		<%=conn.getName() %>.xmlfile = <%=xmlfile %>.toString();	
    	<%=conn.getName() %>.moment = java.util.Calendar.getInstance().getTime();
    	<%=conn.getName() %>.job = jobName;
		<%=conn.getName() %>.component = currentComponent;
		<%=conn.getName() %>.validate = validate_<%=cid %>;
		<%=conn.getName() %>.message = message_<%=cid %>;
<%
	}
}
%>
<%
}
%>


