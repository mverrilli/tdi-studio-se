<%@ jet imports="
		java.util.List
		org.talend.core.model.metadata.IMetadataColumn
        org.talend.core.model.metadata.IMetadataTable
		org.talend.core.model.metadata.types.JavaType
        org.talend.core.model.metadata.types.JavaTypesManager
        org.talend.core.model.process.IConnection
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.process.INode
        org.talend.core.model.process.EConnectionType
        org.talend.designer.codegen.config.CodeGeneratorArgument
        org.talend.core.model.utils.NodeUtil
        "
%>

<%
    final CodeGeneratorArgument codeGenArgument = CodeGeneratorArgument.class.cast(argument);
    final INode node = INode.class.cast(codeGenArgument.getArgument());
    final String cid = node.getUniqueName();
%>

processor_<%=cid%>.flush(outputs_<%=cid%>);

// extract after variables from the processor map and put to after variables map of job
final java.util.Map<String, Object> afterVariablesMap_<%=cid%> = org.talend.sdk.component.runtime.di.studio.AfterVariableExtracter.extractAfterVariables(processorImpl_<%=cid%>);
for (java.util.Map.Entry<String, Object> entry_<%=cid %> : afterVariablesMap_<%=cid%>.entrySet()) {
    globalMap.put("<%=cid %>_"+entry_<%=cid %>.getKey(), entry_<%=cid %>.getValue());
}